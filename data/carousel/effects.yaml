weight: 2
title: "Algebraic Effects"
description: >
    <div class="highlight-textalign-left"><pre class="center-align"><code class="language/ante" data-lang="ante"><span class="c1">// Effects are trivial to combine</span>

    <span class="kt">Interpret</span> = <span class="k">can</span> <span class="kt">Use InterpreterState</span>, <span class="kt">Fail</span>


    <span class="c1">// One use is to thread state automatically, while keeping it explicit in the type signature</span>

    eval (expr: <span class="kt">Expr</span>): <span class="kt">I32</span> <span class="k">can</span> <span class="kt">Interpret</span> =
        <span class="k">match</span> expr
        | <span class="kt">Int</span> x -> x
        | <span class="kt">Var</span> name -> lookup name
        | <span class="kt">Add</span> lhs rhs -> eval lhs + eval rhs  <span class="c1">// No explicit state threading</span>

    <span class="c1">// Convert thrown effect to optional value</span>

    lookup (name: <span class="kt">String</span>): <span class="kt">I32</span> <span class="k">can</span> <span class="kt">Interpret</span> =
        state = get () : <span class="kt">InterpreterState</span>
        state.environment.lookup name |>.unwrap  <span class="c1">// `unwrap` throws a `Fail` effect instead of panicking</span></code></pre></div>
